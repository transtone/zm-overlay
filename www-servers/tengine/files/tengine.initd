#!/sbin/runscript
# Distributed under the terms of the GNU General Public License v2

extra_commands="configtest"
extra_started_commands="upgrade reload"

description="Robust, small and high performance http and reverse proxy server"
description_configtest="Run tengine' internal config check."
description_upgrade="Upgrade the tengine binary without losing connections."
description_reload="Reload the tengine configuration without losing connections."

tengine_config=${tengine_config:-/etc/tengine/tengine.conf}

command="/usr/sbin/tengine"
command_args="-c ${tengine_config}"
pidfile=${pidfile:-/run/tengine.pid}
user=${user:-tengine}
group=${group:-tengine}

depend() {
	need net
	use dns logger netmount
}

start_pre() {
	if [ -z "$( grep \w*worker_processes ${tengine_config} )" ]; then
		# Automatically scale tengine based on number of CPU cores
		command_args="$command_args -g \"worker_processes $(cat /proc/cpuinfo | grep '^model name' | wc -l );\""
	fi
	if [ "${RC_CMD}" != "restart" ]; then
		configtest || return 1
	fi
}

stop_pre() {
	if [ "${RC_CMD}" = "restart" ]; then
		configtest || return 1
	fi
}

stop_post() {
	rm -f ${pidfile}
}

reload() {
	configtest || return 1
	ebegin "Refreshing tengine' configuration"
	kill -HUP `cat ${pidfile}` &>/dev/null
	eend $? "Failed to reload tengine"
}

upgrade() {
	configtest || return 1
	ebegin "Upgrading tengine"

	einfo "Sending USR2 to old binary"
	kill -USR2 `cat ${pidfile}` &>/dev/null

	einfo "Sleeping 3 seconds before pid-files checking"
	sleep 3

	if [ ! -f ${pidfile}.oldbin ]; then
		eerror "File with old pid not found"
		return 1
	fi

	if [ ! -f ${pidfile} ]; then
		eerror "New binary failed to start"
		return 1
	fi

	einfo "Sleeping 3 seconds before WINCH"
	sleep 3 ; kill -WINCH `cat ${pidfile}.oldbin`

	einfo "Sending QUIT to old binary"
	kill -QUIT `cat ${pidfile}.oldbin`

	einfo "Upgrade completed"
	eend $? "Upgrade failed"
}

configtest() {
	ebegin "Checking tengine' configuration"
	${command} -c ${tengine_config} -t -q

	if [ $? -ne 0 ]; then
		${command} -c ${tengine_config} -t
	fi

	eend $? "failed, please correct errors above"
}
