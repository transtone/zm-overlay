diff -urN sflphone-1.2.2-orig/daemon/src/audio/codecs/Makefile.am sflphone-1.2.2/daemon/src/audio/codecs/Makefile.am
--- sflphone-1.2.2-orig/daemon/src/audio/codecs/Makefile.am	2013-03-25 23:05:27.246387321 -0400
+++ sflphone-1.2.2/daemon/src/audio/codecs/Makefile.am	2013-03-25 23:08:30.922405598 -0400
@@ -38,13 +38,11 @@
 endif
 
 if BUILD_ILBC
-include $(src)/libs/pjproject-2.0.1/build.mak
-
 ILBC_LIB = libcodec_ilbc.so
 libcodecdescriptor_la_CXXFLAGS = -DBUILD_ILBC
 libcodec_ilbc_so_SOURCES = ilbc.cpp
-libcodec_ilbc_so_CXXFLAGS = -fPIC -g -Wall -I$(top_srcdir)/libs/pjproject-2.0.1/third_party/
-libcodec_ilbc_so_LDFLAGS = --shared -lc $(top_srcdir)/libs/pjproject-2.0.1/third_party/lib/libilbccodec-$(TARGET_NAME).a
+libcodec_ilbc_so_CXXFLAGS = -fPIC -g -Wall
+libcodec_ilbc_so_LDFLAGS = --shared -lc -lilbc
 libcodec_ilbc_so_LDADD = libcodecdescriptor.la
 INSTALL_ILBC_RULE = install-libcodec_ilbc_so
 endif
diff -urN sflphone-1.2.2-orig/daemon/src/audio/codecs/ilbc.cpp sflphone-1.2.2/daemon/src/audio/codecs/ilbc.cpp
--- sflphone-1.2.2-orig/daemon/src/audio/codecs/ilbc.cpp	2013-03-25 23:45:44.383627843 -0400
+++ sflphone-1.2.2/daemon/src/audio/codecs/ilbc.cpp	2013-03-25 23:46:01.440629540 -0400
@@ -32,10 +32,7 @@
 #include <tr1/array>
 #include <algorithm>
 
-extern "C" {
-#include "ilbc/iLBC_encode.h"
-#include "ilbc/iLBC_decode.h"
-}
+#include "ilbc.h"
 
 class Ilbc: public sfl::AudioCodec {
     public:
@@ -55,22 +52,18 @@
         // iLBC expects floating point data, so we have to convert
         int decode(short *dst, unsigned char *src, size_t /*buf_size*/) {
             /* zero out the buffer */
-            std::fill(dst_float_.begin(), dst_float_.end(), 0);
 
             const int NORMAL_MODE = 1;
-            iLBC_decode(dst_float_.data(), src, &ilbc_dec_, NORMAL_MODE);
+            iLBC_decode(dst, (short unsigned int*)src, &ilbc_dec_, NORMAL_MODE);
 
-            std::copy(dst_float_.begin(), dst_float_.end(), dst);
 
             return frameSize_;
         }
 
         int encode(unsigned char *dst, short* src, size_t /*buf_size*/) {
             /* zero out the buffer */
-            std::fill(src_float_.begin(), src_float_.end(), 0);
-            std::copy(src, src + ILBC_FRAME_SIZE, src_float_.begin());
 
-            iLBC_encode(dst, src_float_.data(), &ilbc_enc_);
+            iLBC_encode((short unsigned int*)dst, src, &ilbc_enc_);
 
             return frameSize_;
         }
